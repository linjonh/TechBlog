/*! build time: 20250309 003315  */
!function(){"use strict";function e(e){console.log("verifyUrl="+e);const t=new URL(e),c=t.pathname;if(!t.protocol.startsWith("http"))return!1;for(const e of s.urlPrefixes)if(t.href.startsWith(e))return!1;for(const e of s.paths)if(c.startsWith(e))return!1;return!0}importScripts("./js/swconfig.js"),console.log("swconf="+swconf);const t=swconf.purge,s=swconf.interceptor;console.log("purge="),console.log(t),console.log("interceptor="),console.log(s),self.addEventListener("install",(e=>{t||e.waitUntil(caches.open(swconf.cacheName).then((e=>e.addAll(swconf.resources))))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>t||e!==swconf.cacheName?caches.delete(e):void 0))))))})),self.addEventListener("message",(e=>{"SKIP_WAITING"===e.data&&self.skipWaiting(),console.log("event.data="+e.data)}));const c="https://cors-proxy-rho-red.vercel.app/",n="https://cors-proxy-rho-red.vercel.app";function o(s,c){s.respondWith(caches.match(c).then((s=>s||fetch(c).then((s=>{const n=c.url;if(t||"GET"!==c.method||!e(n)||200!=s.status)return s;let o=s.clone();return caches.open(swconf.cacheName).then((e=>{console.log("cache="+n),e.put(c,o)})),s})))))}self.addEventListener("fetch",(s=>{console.log(`fetch=${s}`);let r=s.request;if(!r.headers.has("range"))if((r.url.includes("csdnimg.cn")||r.url.includes("https://www.cloudflare-terms-of-service-abuse.com/")||r.url.includes("info-database.csdn.net"))&&!r.url.includes(n)){const e=r.url,t=new Request(c+e,{method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:n,integrity:r.integrity});o(s,t),console.log("Request Headers:",[...t.headers.entries()])}else r.url.includes(n)&&r.url.endsWith(".ts")?function(s,o){s.waitUntil((async()=>{const s=await caches.match(o);if(s)return s;let r=o.url.replace(n+"/","");console.log("handle ts fileï¼š"+r);const a=await caches.keys();for(const s of a){const a=await caches.open(s),i=await a.keys();for(const s of i){const i=await a.match(s),l=await i.text();let d=s.url;if(d.endsWith(".m3u8")&&l.includes(r)){let a=decodeURIComponent(d);a=a.replace(c,"");let i=new URL(r,a.substring(0,a.lastIndexOf("/")+1));i=c+i.href;const l=new Request(i,{method:o.method,headers:o.headers,body:o.body,mode:o.mode,credentials:o.credentials,cache:o.cache,redirect:o.redirect,referrer:n,integrity:o.integrity});let h;const f=await fetch(l);if(f.redirected){const e=c+f.url;h=await fetch(e),h.status}else h=f;const u=s.url;if(t||"GET"!==s.method||!e(u))return h;let p=h.clone();return(await caches.open(swconf.cacheName)).put(s,p),h}}}return fetch(o)})())}(s,r):o(s,r)}))}();
