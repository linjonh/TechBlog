---
permalink: /:basename
---
/*!
 * jekyll-theme-chirpy v7.2.4 | Â© 2019 Cotes Chung | MIT Licensed | https://github.com/cotes2020/jekyll-theme-chirpy/
 */
!function(){"use strict";importScripts("./assets/js/data/swconf.js");const e=swconf.purge,t=swconf.interceptor;function s(s,n){s.respondWith(caches.match(n).then((s=>s||fetch(n).then((s=>{const r=n.url;if(e||"GET"!==n.method||!function(e){const s=new URL(e),n=s.pathname;if(!s.protocol.startsWith("http"))return!1;for(const e of t.urlPrefixes)if(s.href.startsWith(e))return!1;for(const e of t.paths)if(n.startsWith(e))return!1;return!0}(r))return s;let a=s.clone();return caches.open(swconf.cacheName).then((e=>{e.put(n,a)})),s})))))}self.addEventListener("install",(t=>{e||t.waitUntil(caches.open(swconf.cacheName).then((e=>e.addAll(swconf.resources))))})),self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((t=>Promise.all(t.map((t=>e||t!==swconf.cacheName?caches.delete(t):void 0))))))})),self.addEventListener("message",(e=>{"SKIP_WAITING"===e.data&&self.skipWaiting()})),self.addEventListener("fetch",(e=>{if(!e.request.headers.has("range"))if(e.request.url.includes("csdnimg.cn")){const t=new Headers(e.request.headers);t.set("Referer","null"),t.set("Origin","null");s(e,new Request(e.request,{headers:t})),console.log("Request Headers:",[...e.request.headers.entries()]),console.log("Referer and Origin headers have been set to null")}else{let t=e.request.clone();s(e,t)}}))}();
